# Cluster Issuer pour la production
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  namespace: cert-manager
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: security@eto-group.com
    privateKeySecretRef:
      name: letsencrypt-prod-account-key
    solvers:
    # Challenge DNS pour les wildcards
    - dns01:
        cloudflare:
          email: dns-admin@eto-group.com
          apiTokenSecretRef:
            name: cloudflare-api-token
            key: api-token
      selector:
        dnsZones:
        - "eto-group.com"
        - "*.eto-group.com"
    # Challenge HTTP pour les domaines standards
    - http01:
        ingress:
          class: nginx
          podTemplate:
            spec:
              nodeSelector:
                kubernetes.io/os: linux
              tolerations:
              - key: "cert-manager"
                operator: "Equal"
                value: "true"
                effect: "NoSchedule"
              securityContext:
                runAsNonRoot: true
                runAsUser: 1000
                fsGroup: 2000

---
# Certificat principal
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: eto-group-wildcard-cert
  namespace: eto
spec:
  secretName: eto-group-tls
  duration: 2160h # 90 jours
  renewBefore: 360h # 15 jours
  privateKey:
    algorithm: ECDSA
    size: 384
    rotationPolicy: Always
  dnsNames:
  - eto-group.com
  - "*.eto-group.com"
  - api.eto-group.com
  - admin.eto-group.com
  - monitoring.eto-group.com
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  usages:
  - digital signature
  - key encipherment
  - server auth
  - client auth

---
# Configuration TLS spécifique
apiVersion: v1
kind: ConfigMap
metadata:
  name: ssl-config
  namespace: eto
data:
  ssl.conf: |
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    add_header Strict-Transport-Security "max-age=63072000" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

---
# Configuration OCSP Stapling
apiVersion: v1
kind: ConfigMap
metadata:
  name: ocsp-config
  namespace: eto
data:
  ocsp.conf: |
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

---
# Politique de sécurité des certificats
apiVersion: cert-manager.io/v1
kind: CertificateRequestPolicy
metadata:
  name: eto-security-policy
spec:
  allowed:
    commonName:
      text: "*.eto-group.com"
    dnsNames:
      pattern: "^[a-zA-Z0-9-]+\\.eto-group\\.com$"
    usages:
    - server auth
    - client auth
    issuerRef:
      name: letsencrypt-prod
      kind: ClusterIssuer
  constraints:
    minDuration: 720h # 30 jours
    maxDuration: 2160h # 90 jours
    privateKey:
      algorithm: ECDSA
      minSize: 384
    renewBefore:
      percent: 20
