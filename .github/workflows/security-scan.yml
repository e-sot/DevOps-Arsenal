name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight

jobs:
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python
          queries: security-extended,security-and-quality

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docker/eto-webapp/requirements.txt
          pip install bandit safety pytest-security

      - name: Run Bandit security scan
        run: |
          bandit -r . -f json -o bandit-results.json
          bandit -r . -f html -o bandit-results.html
        continue-on-error: true

      - name: Check dependencies for known vulnerabilities
        run: |
          safety check -r docker/eto-webapp/requirements.txt --json > safety-results.json
          safety check -r docker/eto-webapp/requirements.txt --output text > safety-results.txt
        continue-on-error: true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Scan Docker images
        run: |
          docker build -t eto-webapp:test docker/eto-webapp
          trivy image --severity HIGH,CRITICAL --no-progress eto-webapp:test

      - name: Run container security scan
        uses: anchore/scan-action@v3
        with:
          image: "eto-webapp:test"
          fail-build: true
          severity-cutoff: high

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Run OWASP ZAP scan
        uses: zaproxy/action-full-scan@v0.7.0
        with:
          target: 'http://localhost:8080'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

      - name: Check for secrets in code
        uses: gitleaks/gitleaks-action@v2
        with:
          config-path: .gitleaks.toml
          verbose: true

      - name: Run Kubernetes manifests security scan
        run: |
          curl -L "https://github.com/kubernetes/kube-bench/releases/latest/download/kube-bench_0.6.10_linux_amd64.tar.gz" | tar -xz
          sudo ./kube-bench --config-dir `pwd`/cfg --config `pwd`/cfg/config.yaml

      - name: Run TLS configuration check
        run: |
          testssl.sh --severity HIGH --quiet --color 0 localhost:8080 > tls-results.txt

      - name: Upload security scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
        if: always()

      - name: Archive security results
        uses: actions/upload-artifact@v3
        with:
          name: security-scan-results
          path: |
            bandit-results.json
            bandit-results.html
            safety-results.json
            safety-results.txt
            tls-results.txt
          retention-days: 30
        if: always()

      - name: Send notification
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
